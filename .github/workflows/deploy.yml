name: CI/CD to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: private
          region: ${{ secrets.AWS_REGION }}

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Render and register new task definition
        id: render-task
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json # Task definition file is at the root
          container-name: ctse-op-api
          image: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_ECR_REPOSITORY }}:${{ github.sha }}
          environment-variables: |
            MONGO_DB_URI=${{ secrets.MONGO_DB_URI }}

      - name: Register the new task definition with ECS
        run: |
          TASK_DEFINITION=$(aws ecs register-task-definition \
            --family ctse-task \
            --network-mode awsvpc \
            --execution-role-arn ecsTaskExecutionRole \
            --container-definitions file://task-definition.json \
            --requires-compatibilities FARGATE \
            --cpu 256 \
            --memory 512)
          echo $TASK_DEFINITION

      - name: Update ECS service with new task definition
        run: |
          TASK_DEFINITION_REVISION=$(echo $TASK_DEFINITION | jq -r '.taskDefinition.revision')
          aws ecs update-service \
            --cluster ${{ secrets.AWS_ECS_CLUSTER_NAME }} \
            --service ${{ secrets.AWS_ECS_SERVICE_NAME }} \
            --task-definition ctse-task:$TASK_DEFINITION_REVISION \
            --desired-count 1

      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task.outputs.task-definition }}
          service: ${{ secrets.AWS_ECS_SERVICE_NAME }}
          cluster: ${{ secrets.AWS_ECS_CLUSTER_NAME }}
          wait-for-service-stability: true
